<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHcAAABaCAYAAACCC8liAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAA8RJREFUeF7tkUlu3TAQBXOiXMeH8qEd9EKw8FM9kOLQpFhArX41Lfj9+fv99XPc
        01eNWwu9tYLbjtsb+pvZ3Gbc2dA3zXbpcbNC3zrDJcddBfr2kS417lPozYhPoTdHuMS4NdA7La2B3ulp
        6nFLoTdGWAq90cO040ah25lGodvWphs3Ct1mMgrdtjLVuBHoLrMR6K6Facb1oJuV9KCbp04fNwLdrWgE
        uqt16rgedLODHnRT47RxPehmJz3optQp43rQzY560E2Jw8e1oP4NWlAfNc241L5JC+ojDh1Xg9o3qkFt
        xGHjWlD/VjWo9RwyrgX1b9aCesup41J7bDdw93E1qD3+qkGtZtdxNag9/q8GteQZN7Ea1JLdxtWg9qir
        Qe2nQ8el7uhLUPdpl3E1qD36alB7d9i41B3jEtTdPeMuoga1l83H1aB2d+/Q76US1F0OGZe63SWoK5Gg
        7vKM20ENakvUoFZsOi5B3c5aUF8qQZ14xm2oBfU1EtSJZ9xGWlBfK0GdeMZ9qAfdPJGgTlxq3Dv0+2g9
        6KaFBHXNxiWoq5WgbpQedNNKgrqlxxWo7a0H3bSUoG75cQXqe+lBN60lqFtmXNGC+tZ60E0PCeqWGle0
        oL6VFtT3lKBuuXFFC+qfakF9bwnqlhxXtKC+VgvqR0hQt+y4ogfdlGhB/SgJ6pYeV/Sgm4gW1I+UoG75
        cUUPurG0oH60BHVdxxWo7aEH3XzqQTczJKhrNq5IUNdLD7q59KCbGRLUiVuNe2lR2gt0M0uCOnHLcUWL
        aCfc2wwS1InbjitaeL8Ln+9lkKBObDquSFA3yhronQxqUCtuP65YAt1nkaDu8hXjihHoLpMEdZdDxhWo
        Ha0F9ZnUoPay+bgiQd0MCeqySVB3d9i4ArVHXw1q73YZVySoO/oS1H06dFyB2qOuBrWfdhtX1KD2yBLU
        kWfcxGpQS3YdV9Sg9virBrWa08YVqD+2+591H1e0oP7NWlBvOWRc0YL6t6pBreewcUUNat+oBfWeKcYV
        qH+TFtRHHDquaEH9G7SgPurwcUUPutlVC+pLnDKu6EE3O+lBN6VOG1f0oJsd9KCbGqeOK0aguxWNQHe1
        Th9XjEB3KxmB7p6YYtzLCHSX2Qh018JU44pR6DaTUei2lenGvYxCtzONQretTTuuWAq9McJS6I0eph73
        sgZ6p6U10Ds9XWLcy6fQmxGfQm+OcKlxL1eBvn2kS457mRX61hkuPe7d2dA3zXabcT/tDf3NbG47LlkL
        vbWCrxr3bZ5xN/aMu61fP/8AG2q5MeA2enYAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="timer_close.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>